// The Android Gradle Plugin builds the native code with the Android NDK.

group 'com.example.piper_tts'
version '1.0'

buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        // The Android Gradle Plugin knows how to build native code with the NDK.
        classpath 'com.android.tools.build:gradle:7.3.0'
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: 'com.android.library'

// Task to write the NDK path to local.properties
task writeNDKPathToNdkProperties {
    doLast {
        try {
            def ndkPropertiesFile = file("local.properties")
            Properties properties = new Properties()

            // Log the NDK directory path
            println "NDK Directory: ${android.ndkDirectory}"

            // Set the ndk.dir property
            properties.setProperty("ndk.dir", android.ndkDirectory.toString())

            // Attempt to write to local.properties
            ndkPropertiesFile.withWriter { writer ->
                properties.store(writer, null)
            }

            println "Successfully wrote NDK path to local.properties"
        } catch (Exception e) {
            println "Failed to write NDK path to local.properties: ${e.message}"
            e.printStackTrace()
        }
    }
}

// Correctly set preBuild to depend on writeNDKPathToNdkProperties
preBuild.dependsOn writeNDKPathToNdkProperties

android {
    if (project.android.hasProperty("namespace")) {
        namespace 'com.example.piper_tts'
    }

    // Bumping the plugin compileSdk version requires all clients of this plugin
    // to bump the version in their app.
    compileSdk 34

    // Use the NDK version
    // declared in /android/app/build.gradle file of the Flutter project.
    // Replace it with a version number if this plugin requires a specfic NDK version.
    // (e.g. ndkVersion "23.1.7779620")
    ndkVersion android.ndkVersion

    // Invoke the shared CMake build with the Android Gradle Plugin.
    externalNativeBuild {
        cmake {
            path "./CMakeLists.txt"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 34
        ndk {
            abiFilters 'arm64-v8a'
        }
    }
}